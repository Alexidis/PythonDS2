1. Для чего и в каких случаях полезны различные варианты усреднения для метрик качества классификации: micro, macro, weighted?
    1.1. micro - показывает значение метрики для всего набора целиком, может быть полезным показателем, если необходимо нивелировать значение высокочастотного класса.
                 Рассчитывается как метрика по всей выборке;
    1.2. macro - используется при сбалансированности классов или если значение низкочастотных классов не важны.
                 Рассчитывается как среднеарифметическое метрики каждого класса;
    1.3. weighted - используется для несбалансированных данных что бы подчеркнуть влияние каждого из классов опираясь на количество его представителей.
                    Рассчитывается как средневзвешеное метрики по числу выборок на каждый класс.

2. В чём разница между моделями xgboost, lightgbm и catboost или какие их основные особенности?

    2.1. Особенности алгоритма xgboost:
        - Эффективности вычислительных ресурсов времени и памяти;
        - Различные стратегии обработки пропущенных данных;
        - Блочная структура для поддержки распараллеливания обучения деревьев;
        - Продолжение обучения для дообучения на новых данных

    2.2 Особенности алгоритма lightgbm:
        - Градиентная односторонняя выборка — модификация градиентного бустинга, который фокусирует внимание на тех учебных примерах,
                                              которые приводят к большему градиенту, в свою очередь, ускоряя обучение и уменьшая вычислительную сложность метода;
        - Объединение взаимоисключающих признаков — это подход объединения разрежённых взаимоисключающих признаков,
                                                    таких как категориальные переменные входных данных, закодированные унитарным кодированием.
    2.3 Особенности алгоритма CatBoost:
        - Позволяет проводить обучение на нескольких GPU;
        - Позволяет получить отличные результаты с параметрами по умолчанию, что сокращает время, необходимое для настройки гиперпараметров;
        - Обеспечивает повышенную точность за счет уменьшения переобучения;
        - Умеет под капотом обрабатывать пропущенные значения;
        - Может использоваться для регрессионных и классификационных задач.
